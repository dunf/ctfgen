heat_template_version: 2015-10-15
description: >
  This template is supposed to create only the networking parts.
  Servers are specified elsewhere.
parameters:
  public_net:
    type: string
    description: >
      ID or name of public network for which floating IP addresses will be allocated
    default: ntnu-internal
  group_net_name:
    type: string
    description: Name of subnetA network to be created
    default: group01_net
  subnetA_net_cidr:
    type: string
    description: subnetA network address (CIDR notation)
    default: 192.168.1.0/24
  subnetA_net_gateway:
    type: string
    description: subnetA network gateway address
    default: 192.168.1.1
  subnetA_net_pool_start:
    type: string
    description: Start of subnetA network IP address allocation pool
    default: 192.168.1.100
  subnetA_net_pool_end:
    type: string
    description: End of subnetA network IP address allocation pool
    default: 192.168.1.199
  subnetB_net_cidr:
    type: string
    description: subnetB network address (CIDR notation)
    default: 10.0.1.0/24
  subnetB_net_gateway:
    type: string
    description: subnetB network gateway address
    default: 10.0.1.1
  subnetB_net_pool_start:
    type: string
    description: Start of subnetA network IP address allocation pool
    default: 10.0.1.100
  subnetB_net_pool_end:
    type: string
    description: End of subnetB network IP address allocation pool
    default: 10.0.1.199
  subnetA:
    type: string
  subnetB:
    type: string

resources:
  group_net:
    type: OS::Neutron::Net
    properties:
      name: { get_param: group_net_name }

  subnetA:
    type: OS::Neutron::Subnet
    properties:
      name:           { get_param: subnetA }
      network_id:     { get_resource: group_net }
      cidr:           { get_param: subnetA_net_cidr }
      gateway_ip:     { get_param: subnetA_net_gateway }
      allocation_pools:
        - start:      { get_param: subnetA_net_pool_start }
          end:        { get_param: subnetA_net_pool_end }

  subnetB:
    type: OS::Neutron::Subnet
    properties:
      name:         { get_param: subnetB }
      network_id:   { get_resource: group_net }
      cidr:         { get_param: subnetB_net_cidr }
      gateway_ip:   { get_param: subnetB_net_gateway }
      allocation_pools:
        - start:    { get_param: subnetB_net_pool_start }
          end:      { get_param: subnetB_net_pool_end }

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_net }

  router_interface_subnetA:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: subnetA }

  router_interface_subnetB:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: subnetB }

outputs:
  group_name:
    description: Group Net name
    value: { get_attr: [group_net, name] }
  subnetA:
    description: subnetA subnet 
    value: { get_attr: [subnetA, name]}
  subnetB:
    description: subnetB subnet 
    value: { get_attr: [subnetB, name]}